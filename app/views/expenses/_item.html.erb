<tr id="item_<%= expense.id %>" >
  <td><%= check_box_tag "check_items[#{expense.id}]", expense.id if permitted_to? :batch_actions,expense %><%= expense.id %></td>
  <td><%= expense.charge_date %>(<%= expense.charge_date.to_date.strftime("%A") %>)</td>
  <td><%= expense.person.english_name unless expense.person.nil? %></td>
  <td><%= expense.billable %></td>
  <td><%= expense.expense_category %></td>
  <td><%= expense.project.client.english_name unless expense.project.client.nil?%></td>
  <td><%= expense.project.job_code %></td>
  <td><%= expense.fee %></td>
  <td><%= expense.state.humanize %></td>
  <td><%= link_to 'Show', expense_path(expense) if permitted_to? :show, expense %></td>
  <td><%= link_to 'Edit', edit_expense_path(expense) if permitted_to? :edit, expense %></td>
  <td><%= button_to_remote 'Approval', :url=>approval_expense_path(expense), :confirm => " Are you sure approval?", :method => :post if permitted_to? :approval, expense %>
    <%= button_to_remote 'Disapproval', :url=>disapproval_expense_path(expense), :confirm => "Are you sure disapproval?",:method => :post  if permitted_to? :disapproval, expense %>
		<%= select("","select_zy_id",Project.find(:all,:conditions=>" state = 'approved' ", :order=>"job_code").collect {|p| [ p.job_code, p.id ] }, { :include_blank => "Transfer to:" },{ :onChange=>"switch_form(this.value,'#{transform_expense_path(expense)}',#{expense.id}); " }) if expense.state =="approved" and  !Dict.get_forward(expense.project.job_code).empty?  and permitted_to? :transform,expense %> 
    <%= button_to_remote 'Destroy', :update=> 'expenses',:url=>expense, :confirm => 'Are you sure destroy?', :method => :delete   if permitted_to? :delete, expense %>
  </td>
</tr>